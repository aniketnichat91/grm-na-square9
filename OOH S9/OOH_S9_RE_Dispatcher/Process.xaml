<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(sd:DataRow)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_processtrans" Type="InArgument(x:Int32)" />
    <x:Property Name="in_dbc" Type="InArgument(ui:DatabaseConnection)" />
    <x:Property Name="str_SpPassword" Type="InArgument(x:String)" />
    <x:Property Name="str_SpUsername" Type="InArgument(x:String)" />
  </x:Members>
  <this:Process.in_processtrans>
    <InArgument x:TypeArguments="x:Int32" />
  </this:Process.in_processtrans>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1162,1369</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="52">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="62">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="383,1304" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="var_outpdffilepath" />
      <Variable x:TypeArguments="x:String" Name="strExactFileNameForQueue" />
      <Variable x:TypeArguments="x:String" Name="varonlyfilename" />
      <Variable x:TypeArguments="x:String" Name="var_compilefilepath" />
      <Variable x:TypeArguments="x:String" Name="var_ClientName" />
      <Variable x:TypeArguments="x:String" Name="var_ProductName" />
      <Variable x:TypeArguments="x:String" Name="var_UserName" />
      <Variable x:TypeArguments="ss:SecureString" Name="secure_Password" />
      <Variable x:TypeArguments="x:String" Name="str_FaEmail" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:Comment DisplayName="Comment (placeholder)" sap:VirtualizedContainerService.HintSize="341,55" sap2010:WorkflowViewState.IdRef="Comment_1" Text="//  Invoke steps of the process" />
    <Sequence sap2010:Annotation.AnnotationText="Get FA Email from Table OOH FA Master." DisplayName="Sequence- Get FA Email ID" sap:VirtualizedContainerService.HintSize="341,108" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dt_FaEmail" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_FaEmail]" DisplayName="Run query" ExistingDbConnection="[in_dbc]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[&quot;Select FA_Email_ID From OOH_FA_Master where FA_ID=(Select Log_Agency_ID from ooh_log_txn where Log_ID = '&quot;+in_TransactionItem(&quot;Log_ID&quot;).ToString+&quot;')&quot;]">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
      </ui:ExecuteQuery>
      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_FaEmail]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[dt_FaEmail.Rows(0).Item(0).ToString]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This flow will validate the important fields in table, If bad data found will send an aleart email to FA." DisplayName="Invoke Validate All Mandatory Fields" sap:VirtualizedContainerService.HintSize="341,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Process Files\Validate Mandatory Fields.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="io_pdf_file_name">[in_TransactionItem("Log_Invoice_FileName").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_SPPass">[str_SpPassword]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_SPUser">[str_SpUsername]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_inv_num">[in_TransactionItem("Log_Invoice_Number").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_C">[in_TransactionItem("Log_Validated_C").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_P">[in_TransactionItem("Log_Validated_P").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_E">[in_TransactionItem("Log_Validated_E").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_MOS">[in_TransactionItem("Log_Invoice_MOS").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_PDF_Amount">[in_TransactionItem("Log_Invoice_Amount").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_pubcode">[in_TransactionItem("Log_Publication_Code").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_db">[in_dbc]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_DB_Connection">[in_Config("DB_Connection").ToString]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_ClientName">[var_ClientName]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_doc_link">[in_TransactionItem("Log_SP_FilePath").ToString.Trim]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_ProductName">[var_ProductName]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_FaEmailAddress">[str_FaEmail]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="io_pdf_Date">2020-03-31</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This process will download pdf attachments from Share point to local path" DisplayName="Invoke Download attachment from SP workflow" sap:VirtualizedContainerService.HintSize="341,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Download attachment from SP.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_transnumber">[in_processtrans]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_downloadfilepath">[in_Config("PDF_Download_Path").ToString.Trim]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_downloadpdfpath">[var_outpdffilepath]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_spfilelocation">[in_TransactionItem("Log_SP_FilePath").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_spurl">[in_Config("SPURL").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_spPass">[str_SpPassword]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_spUser">[str_SpUsername]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This process Checks Filename character length and with updated filename move all pdfs to process folder" DisplayName="Invoke Compile pdf workflow" sap:VirtualizedContainerService.HintSize="341,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Compile pdf.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_folderpath">[var_outpdffilepath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_localfolderpath">[in_Config("PDF_Download_Path").ToString.Trim]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_compilepath">[var_compilefilepath]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_onlyfilename">[varonlyfilename]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_strExactFileName">[strExactFileNameForQueue]</OutArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_trans">[in_processtrans]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This process will validate, transform and add data into queue for performer and DB update S9 TXN table" DisplayName="Invoke Add data to queue workflow" sap:VirtualizedContainerService.HintSize="341,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Tests\Add data to queue.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_c">[in_TransactionItem("Log_Validated_C").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_p">[in_TransactionItem("Log_Validated_P").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_pname">[var_ProductName]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_batch" />
        <InArgument x:TypeArguments="x:String" x:Key="in_mediacode" />
        <InArgument x:TypeArguments="x:String" x:Key="in_invoicedate">[in_TransactionItem("Log_Invoice_Date").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_invoicenumber">[in_TransactionItem("Log_Invoice_Number").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_est">[in_TransactionItem("Log_Validated_E").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_cname">[var_ClientName]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_amount">[in_TransactionItem("Log_Invoice_Amount").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_repcode" />
        <InArgument x:TypeArguments="x:String" x:Key="in_month" />
        <InArgument x:TypeArguments="x:String" x:Key="in_year" />
        <InArgument x:TypeArguments="x:String" x:Key="in_pubcode">[in_TransactionItem("Log_Publication_Code").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_pubname">[in_TransactionItem("Log_Publication_Name").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_filepath" />
        <InArgument x:TypeArguments="x:String" x:Key="in_compilefilepath">[var_compilefilepath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_onlyfilename">[varonlyfilename]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_queuename">[in_Config("QUEUE").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_dbcon">[in_dbc]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ID">[in_TransactionItem("Log_ID").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_MOS">[in_TransactionItem("Log_Invoice_MOS").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_stamp" />
        <InArgument x:TypeArguments="x:String" x:Key="in_SpUsername">[str_SpUsername]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_SpPassword">[str_SpPassword]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_FaEmailAddress">[str_FaEmail]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="341,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Row Process Finished&quot;]" />
  </Sequence>
</Activity>