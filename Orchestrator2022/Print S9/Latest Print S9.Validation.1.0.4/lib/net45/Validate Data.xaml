<Activity mc:Ignorable="sap sap2010" x:Class="Validate_Data" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_username" Type="InArgument(x:String)" />
    <x:Property Name="in_password" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1711,3458</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Validate_Data_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="45">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>GSSQ9WebAPI_Package</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>Microsoft.Exchange.WebServices.Data</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="80">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>GSSQ9WebAPI_Package</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Exchange.WebServices</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Validate_Data" sap:VirtualizedContainerService.HintSize="1721,3393" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="updatemaserlogquery" />
      <Variable x:TypeArguments="x:String" Name="var_c" />
      <Variable x:TypeArguments="x:String" Name="var_p" />
      <Variable x:TypeArguments="x:String" Name="var_E" />
      <Variable x:TypeArguments="x:String" Name="var_station" />
      <Variable x:TypeArguments="x:String" Name="var_manifestpath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Fetch data from SQL" sap:VirtualizedContainerService.HintSize="1679,3301" sap2010:WorkflowViewState.IdRef="Sequence_13">
      <Sequence.Variables>
        <Variable x:TypeArguments="ui:DatabaseConnection" Name="dbconnect" />
        <Variable x:TypeArguments="x:String" Name="rundate" />
        <Variable x:TypeArguments="x:String" Name="selectquery" />
        <Variable x:TypeArguments="sd:DataTable" Name="opquery" />
        <Variable x:TypeArguments="x:String" Name="vardocument" />
        <Variable x:TypeArguments="x:String" Name="updatequery" />
        <Variable x:TypeArguments="x:String" Name="var_validatedate" />
        <Variable x:TypeArguments="ss:SecureString" Name="var_pass" />
        <Variable x:TypeArguments="x:String" Name="var_user" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="Vendor Master File Cred" DisplayName="Get Credential" FolderPath="[in_Config(&quot;Cloud_FolderPath&quot;).tostring]" sap:VirtualizedContainerService.HintSize="1637,79" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[var_pass]" Username="[var_user]" />
      <Assign sap:VirtualizedContainerService.HintSize="1637,60" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[rundate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.DateTime.Now.AddDays(-1).ToString("yyyy-MM-dd")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="1637,60" sap2010:WorkflowViewState.IdRef="Assign_21">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[var_validatedate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.DateTime.Now.ToString("yyyy-MM-dd")]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:DatabaseConnect DatabaseConnection="[dbconnect]" DisplayName="Connect" sap:VirtualizedContainerService.HintSize="1637,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="System.Data.SqlClient" ConnectionString="Data Source=eussqsvgrmusafinance01.database.windows.net;Initial Catalog=eussqdbgrmusaapdigital01;Persist Security Info=True;User ID=NA_sqlusr_AOC_PRD_01;Password=85QeWU*aApXZ" />
      <Assign sap:VirtualizedContainerService.HintSize="1637,60" sap2010:WorkflowViewState.IdRef="Assign_18">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[selectquery]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">["select * from Print_S9_Data_Staging where (PS_IsCnfSquare is NULL or PS_IsCnfSquare = 0)  and PS_IsBotProcessed = 1"]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[opquery]" DisplayName="Execute Query" ExistingDbConnection="[dbconnect]" sap:VirtualizedContainerService.HintSize="1637,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[selectquery]">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
      </ui:ExecuteQuery>
      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1637,61" sap2010:WorkflowViewState.IdRef="WriteLine_21" Text="[opquery.Rows.Count.ToString]" />
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[opquery]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="1637,2462" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1603,2342" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="varpub_code" />
                <Variable x:TypeArguments="x:String" Name="var_invnum" />
                <Variable x:TypeArguments="x:String" Name="responcejson" />
                <Variable x:TypeArguments="x:String" Name="var_filepath" />
                <Variable x:TypeArguments="x:String" Name="hashop" />
                <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="matchhashop" />
                <Variable x:TypeArguments="x:Int32" Name="varstatuscode" />
                <Variable x:TypeArguments="x:String" Name="var_agency" />
                <Variable x:TypeArguments="x:String" Name="var_bucket" />
                <Variable x:TypeArguments="x:String" Name="var_vendorcode" />
                <Variable x:TypeArguments="x:String" Name="var_month" />
                <Variable x:TypeArguments="x:String" Name="var_year" />
                <Variable x:TypeArguments="x:String" Name="varmailid" />
                <Variable x:TypeArguments="x:String" Name="var_logid" />
                <Variable x:TypeArguments="x:String" Name="var_media" />
                <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="header" />
                <Variable x:TypeArguments="x:String" Name="varlicence" />
                <Variable x:TypeArguments="x:Int32" Name="statuscode" />
                <Variable x:TypeArguments="x:String" Name="result" />
                <Variable x:TypeArguments="x:String" Default="1" Name="dbsId" />
                <Variable x:TypeArguments="x:String" Default="151" Name="searchId" />
                <Variable x:TypeArguments="x:String" Name="secureid" />
                <Variable x:TypeArguments="x:String" Default="5153" Name="invoiceNumberSearchId" />
                <Variable x:TypeArguments="x:String" Default="5152" Name="pubNumberSearchId" />
                <Variable x:TypeArguments="x:String" Default="5154" Name="clientCodeSearchId" />
                <Variable x:TypeArguments="x:String" Default="151" Name="archiveId" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="1561,60" sap2010:WorkflowViewState.IdRef="Assign_75">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[var_invnum]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[CurrentRow("PS_Invoice_Number").ToString.Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="1561,60" sap2010:WorkflowViewState.IdRef="Assign_76">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[var_media]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[CurrentRow("PS_Media").ToString.Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" ResourcePath="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" AcceptFormat="JSON" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - Get Licence" EndPoint="https://groupm.mysquare9.com/square9api/api/licenses?format={json|xml}" sap:VirtualizedContainerService.HintSize="1561,22" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="GET" Password="26@mDocs!123" ResponseHeaders="[header]" Result="[result]" StatusCode="[statuscode]" TimeoutMS="600000" Username="_nycgrm.printbot@ad.insidemedia.net">
                <ui:HttpClient.Attachments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Attachments>
                <ui:HttpClient.Cookies>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Cookies>
                <ui:HttpClient.Headers>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.Headers>
                <ui:HttpClient.Parameters>
                  <InArgument x:TypeArguments="x:String" x:Key="licences?format={json|xml}">[Nothing]</InArgument>
                </ui:HttpClient.Parameters>
                <ui:HttpClient.UrlSegments>
                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                </ui:HttpClient.UrlSegments>
              </ui:HttpClient>
              <Assign sap:VirtualizedContainerService.HintSize="1561,60" sap2010:WorkflowViewState.IdRef="Assign_85">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[varlicence]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[header("SS-TOKEN").ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1561,61" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="Here Import Ge License" />
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1561,61" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[responcejson]" />
              <Sequence sap:VirtualizedContainerService.HintSize="1561,1686" sap2010:WorkflowViewState.IdRef="Sequence_73">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="updatebrodcastalltable" />
                  <Variable x:TypeArguments="s:String[]" Default="[{&quot;steven.mandell@groupm.com&quot;,&quot;claire.tilelli@groupm.com&quot;}]" Name="arrccid" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[var_media.ToLower.ToString.Contains(&quot;m&quot;) or var_media.ToLower.ToString.Contains(&quot;t&quot;)]" sap:VirtualizedContainerService.HintSize="1519,1594" sap2010:WorkflowViewState.IdRef="If_50">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="737,1446" sap2010:WorkflowViewState.IdRef="Sequence_66">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" ResourcePath="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" AcceptFormat="JSON" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - Get Secure ID" EndPoint="[&quot;https://groupm.mysquare9.com/square9api/api/dbs/&quot; + dbsId + &quot;/searches/&quot; + searchId + &quot;?token=&quot; + varlicence+ &quot;&amp;format=json&quot;]" sap:VirtualizedContainerService.HintSize="695,22" sap2010:WorkflowViewState.IdRef="HttpClient_3" Method="GET" Password="26@mDocs!123" ResponseHeaders="[header]" Result="[result]" StatusCode="[statuscode]" TimeoutMS="600000" Username="_nycgrm.printbot@ad.insidemedia.net">
                        <ui:HttpClient.Attachments>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </ui:HttpClient.Attachments>
                        <ui:HttpClient.Cookies>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </ui:HttpClient.Cookies>
                        <ui:HttpClient.Headers>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </ui:HttpClient.Headers>
                        <ui:HttpClient.Parameters>
                          <InArgument x:TypeArguments="x:String" x:Key="licences?format={json|xml}">[Nothing]</InArgument>
                        </ui:HttpClient.Parameters>
                        <ui:HttpClient.UrlSegments>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </ui:HttpClient.UrlSegments>
                      </ui:HttpClient>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="varJsonResponse = varJsonResponse.Substring(1,varJsonResponse.Length-2);&#xA;var objects = Newtonsoft.Json.Linq.JObject.Parse(varJsonResponse);&#xA;varSecureId = objects[&quot;Hash&quot;].ToString();&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="695,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
                        <ui:InvokeCode.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="varJsonResponse">[result]</InArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="varSecureId">[secureid]</OutArgument>
                        </ui:InvokeCode.Arguments>
                      </ui:InvokeCode>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="695,61" sap2010:WorkflowViewState.IdRef="WriteLine_19" Text="Here import Get Secure ID" />
                      <Sequence sap:VirtualizedContainerService.HintSize="695,658" sap2010:WorkflowViewState.IdRef="Sequence_88">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" ResourcePath="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" AcceptFormat="JSON" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - Get Document Status" EndPoint="[&quot;https://groupm.mysquare9.com/square9api/api/dbs/&quot; + dbsId + &quot;/searches/&quot; + searchId + &quot;/archive/&quot; + archiveId + &quot;/documents?Secureid=&quot; + secureId + &quot;&amp;token=&quot; + varlicence + &quot;&amp;format=json&amp;SearchCriteria={&quot; + invoiceNumberSearchId + &quot;:'&quot; + var_invnum + &quot;',&quot; + pubNumberSearchId + &quot;:'&quot; + var_vendorcode + &quot;',&quot;+ clientCodeSearchId + &quot;:'&quot; + var_c +  &quot;'}&quot;]" sap:VirtualizedContainerService.HintSize="653,22" sap2010:WorkflowViewState.IdRef="HttpClient_4" Method="GET" Password="26@mDocs!123" ResponseHeaders="[header]" Result="[result]" StatusCode="[statuscode]" TimeoutMS="600000" Username="_nycgrm.printbot@ad.insidemedia.net">
                          <ui:HttpClient.Attachments>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Attachments>
                          <ui:HttpClient.Cookies>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Cookies>
                          <ui:HttpClient.Headers>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Headers>
                          <ui:HttpClient.Parameters>
                            <InArgument x:TypeArguments="x:String" x:Key="licences?format={json|xml}">[Nothing]</InArgument>
                          </ui:HttpClient.Parameters>
                          <ui:HttpClient.UrlSegments>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.UrlSegments>
                        </ui:HttpClient>
                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="var objects = Newtonsoft.Json.Linq.JObject.Parse(varJsonResponse);&#xA;varDocumentStatus = objects[&quot;Docs&quot;].ToString();&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="653,164" sap2010:WorkflowViewState.IdRef="InvokeCode_2" Language="CSharp">
                          <ui:InvokeCode.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="varJsonResponse">[result]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="varDocumentStatus">[vardocument]</OutArgument>
                          </ui:InvokeCode.Arguments>
                        </ui:InvokeCode>
                        <If Condition="[not String.IsNullOrEmpty(vardocument.Trim)]" sap:VirtualizedContainerService.HintSize="653,300" sap2010:WorkflowViewState.IdRef="If_40">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_79">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_65">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[vardocument]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">1</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_65">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_66">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[vardocument]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">0</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="695,61" sap2010:WorkflowViewState.IdRef="WriteLine_20" Text="Here Import Document Status" />
                      <Assign sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_72">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[updatequery]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["Update Print_S9_Data_Staging set PS_IsCnfSquare = '"+vardocument+"', PS_CnfSquare_Processed_Date = '"+System.DateTime.Now.ToString+"' where PS_Invoice_Number = '"+var_invnum+"'"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[dbconnect]" sap:VirtualizedContainerService.HintSize="695,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_12" Sql="[updatequery]">
                        <ui:ExecuteQuery.Parameters>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:ExecuteQuery.Parameters>
                      </ui:ExecuteQuery>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="737,1446" sap2010:WorkflowViewState.IdRef="Sequence_97">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" ResourcePath="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" AcceptFormat="JSON" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - Get Secure ID" EndPoint="[&quot;https://groupm.mysquare9.com/square9api/api/dbs/&quot; + dbsId + &quot;/searches/&quot; + searchId + &quot;?token=&quot; + varlicence+ &quot;&amp;format=json&quot;]" sap:VirtualizedContainerService.HintSize="695,22" sap2010:WorkflowViewState.IdRef="HttpClient_5" Method="GET" Password="26@mDocs!123" ResponseHeaders="[header]" Result="[result]" StatusCode="[statuscode]" TimeoutMS="600000" Username="_nycgrm.printbot@ad.insidemedia.net">
                        <ui:HttpClient.Attachments>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </ui:HttpClient.Attachments>
                        <ui:HttpClient.Cookies>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </ui:HttpClient.Cookies>
                        <ui:HttpClient.Headers>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </ui:HttpClient.Headers>
                        <ui:HttpClient.Parameters>
                          <InArgument x:TypeArguments="x:String" x:Key="licences?format={json|xml}">[Nothing]</InArgument>
                        </ui:HttpClient.Parameters>
                        <ui:HttpClient.UrlSegments>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                        </ui:HttpClient.UrlSegments>
                      </ui:HttpClient>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="varJsonResponse = varJsonResponse.Substring(1,varJsonResponse.Length-2);&#xA;var objects = Newtonsoft.Json.Linq.JObject.Parse(varJsonResponse);&#xA;varSecureId = objects[&quot;Hash&quot;].ToString();&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="695,164" sap2010:WorkflowViewState.IdRef="InvokeCode_3" Language="CSharp">
                        <ui:InvokeCode.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="varJsonResponse">[result]</InArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="varSecureId">[secureid]</OutArgument>
                        </ui:InvokeCode.Arguments>
                      </ui:InvokeCode>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="695,61" sap2010:WorkflowViewState.IdRef="WriteLine_22" Text="Here import Get Secure ID" />
                      <Sequence sap:VirtualizedContainerService.HintSize="695,658" sap2010:WorkflowViewState.IdRef="Sequence_95">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" ResourcePath="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" AcceptFormat="JSON" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request - Get Document Status" EndPoint="[&quot;https://groupm.mysquare9.com/square9api/api/dbs/&quot; + dbsId + &quot;/searches/&quot; + searchId + &quot;/archive/&quot; + archiveId + &quot;/documents?Secureid=&quot; + secureId + &quot;&amp;token=&quot; + varlicence + &quot;&amp;format=json&amp;SearchCriteria={&quot; + invoiceNumberSearchId + &quot;:'&quot; + var_invnum + &quot;',&quot; + pubNumberSearchId + &quot;:'&quot; + var_vendorcode + &quot;',&quot;+ clientCodeSearchId + &quot;:'&quot; + var_c +  &quot;'}&quot;]" sap:VirtualizedContainerService.HintSize="653,22" sap2010:WorkflowViewState.IdRef="HttpClient_6" Method="GET" Password="26@mDocs!123" ResponseHeaders="[header]" Result="[result]" StatusCode="[statuscode]" TimeoutMS="600000" Username="_nycgrm.printbot@ad.insidemedia.net">
                          <ui:HttpClient.Attachments>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Attachments>
                          <ui:HttpClient.Cookies>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Cookies>
                          <ui:HttpClient.Headers>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Headers>
                          <ui:HttpClient.Parameters>
                            <InArgument x:TypeArguments="x:String" x:Key="licences?format={json|xml}">[Nothing]</InArgument>
                          </ui:HttpClient.Parameters>
                          <ui:HttpClient.UrlSegments>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.UrlSegments>
                        </ui:HttpClient>
                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="var objects = Newtonsoft.Json.Linq.JObject.Parse(varJsonResponse);&#xA;varDocumentStatus = objects[&quot;Docs&quot;].ToString();&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="653,164" sap2010:WorkflowViewState.IdRef="InvokeCode_4" Language="CSharp">
                          <ui:InvokeCode.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="varJsonResponse">[result]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="varDocumentStatus">[vardocument]</OutArgument>
                          </ui:InvokeCode.Arguments>
                        </ui:InvokeCode>
                        <If Condition="[not String.IsNullOrEmpty(vardocument.Trim)]" sap:VirtualizedContainerService.HintSize="653,300" sap2010:WorkflowViewState.IdRef="If_49">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_93">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_80">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[vardocument]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">1</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_94">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_83">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[vardocument]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">0</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="695,61" sap2010:WorkflowViewState.IdRef="WriteLine_23" Text="Here Import Document Status" />
                      <Assign sap:VirtualizedContainerService.HintSize="695,60" sap2010:WorkflowViewState.IdRef="Assign_84">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[updatequery]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String" xml:space="preserve">["Update Print_S9_Data_Staging set PS_IsCnfSquare = '"+vardocument+"', PS_CnfSquare_Processed_Date = '"+System.DateTime.Now.ToString+"'  where PS_Invoice_Number = '"+var_invnum+"'"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Query" ExistingDbConnection="[dbconnect]" sap:VirtualizedContainerService.HintSize="695,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_14" Sql="[updatequery]">
                        <ui:ExecuteQuery.Parameters>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:ExecuteQuery.Parameters>
                      </ui:ExecuteQuery>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
      </ui:ForEachRow>
    </Sequence>
  </Sequence>
</Activity>