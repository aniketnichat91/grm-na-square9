<Activity mc:Ignorable="sap sap2010" x:Class="Uipath_PdfCorruptCheck" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="897,1125" sap2010:WorkflowViewState.IdRef="Uipath_PdfCorruptCheck_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="46">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="18">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Uipath_PdfCorruptCheck" sap:VirtualizedContainerService.HintSize="526,920" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="varpdfcorrupt" />
      <Variable x:TypeArguments="x:String" Name="strop" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:Comment sap:VirtualizedContainerService.HintSize="484,74" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// Pass the PDF full file path in the edit argument section of Invoke Code" />
    <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="C:\1Files\UPProjects\Broadcast\Brodcast to S9 data\2022-01-21\TDSPOTPAK_BOT\Binder1.pdf" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[strop]" />
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="484,61" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[strop]" />
    <If Condition="[string.IsNullOrEmpty(strop)]" sap:VirtualizedContainerService.HintSize="484,209" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="231,61" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="inside if" />
      </If.Then>
    </If>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim fs As System.IO.FileStream = New FileStream(PdfFilePath, FileMode.OpenOrCreate, FileAccess.ReadWrite)&#xD;&#xA;Dim analyzer As Syncfusion.Pdf.Parsing.PdfDocumentAnalyzer = New Syncfusion.Pdf.Parsing.PdfDocumentAnalyzer(fs)&#xD;&#xA;Dim result As Syncfusion.Pdf.Parsing.SyntaxAnalyzerResult = analyzer.AnalyzeSyntax&#xD;&#xA;'Dim iscorrupt As Boolean&#xD;&#xA;If result.IsCorrupted Then&#xD;&#xA;'Dim iscorrupt As Boolean= True&#xD;&#xA;ispdfcorrupt = True&#xD;&#xA;Dim builder As New System.Text.StringBuilder()&#xD;&#xA;builder.AppendLine(&quot;The PDF document is corrupted.&quot;)&#xD;&#xA;Console.WriteLine(&quot;PDF is corrupted&quot;)&#xD;&#xA;Dim count As New Integer&#xD;&#xA;count = 1&#xD;&#xA;For Each exception As Syncfusion.Pdf.PdfException In result.Errors&#xD;&#xA;builder.AppendLine(Math.Min(Threading.Interlocked.Increment(count), count - 1).ToString &amp; &quot;: &quot; &amp; exception.Message)&#xD;&#xA;Next&#xD;&#xA;Else&#xD;&#xA;Console.WriteLine(&quot;PDF is Not Corrupted&quot;)&#xD;&#xA;ispdfcorrupt = False&#xD;&#xA;End If&#xD;&#xA;analyzer.Close()" DisplayName="Invoke code - To Check the PDF is corrupted or not" sap:VirtualizedContainerService.HintSize="484,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="PdfFilePath">
          <Literal x:TypeArguments="x:String">C:\Users\Sandip.Kore-s\Desktop\JP2 ESPD 160002285 (1).pdf</Literal>
        </InArgument>
        <InOutArgument x:TypeArguments="x:Boolean" x:Key="ispdfcorrupt">
          <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="varpdfcorrupt" />
        </InOutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="484,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[varpdfcorrupt.ToString]" />
  </Sequence>
</Activity>