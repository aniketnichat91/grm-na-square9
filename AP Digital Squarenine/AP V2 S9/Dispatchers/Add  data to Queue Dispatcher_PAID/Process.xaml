<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(sd:DataRow)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_SPURL" Type="InArgument(x:String)" />
    <x:Property Name="in_SPCredentials" Type="InArgument(x:String)" />
    <x:Property Name="out_sppass" Type="OutArgument(ss:SecureString)" />
    <x:Property Name="out_spuser" Type="OutArgument(x:String)" />
    <x:Property Name="in_localfolderpath" Type="InArgument(x:String)" />
    <x:Property Name="in_localbatchtime" Type="InArgument(x:String)" />
    <x:Property Name="in_spuser" Type="InArgument(x:String)" />
    <x:Property Name="in_sppass" Type="InArgument(x:String)" />
    <x:Property Name="in_SPURL_GPC" Type="InArgument(x:String)" />
  </x:Members>
  <this:Process.in_SPURL>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.in_SPURL>
  <this:Process.in_SPCredentials>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.in_SPCredentials>
  <this:Process.in_localfolderpath>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.in_localfolderpath>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1693,7750</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Database.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="49">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>Microsoft.Exchange.WebServices</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="1703,7645" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="var_isnra" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="var_dbconnect" />
      <Variable x:TypeArguments="x:String" Name="var_sppass" />
      <Variable x:TypeArguments="x:String" Name="var_SPURL" />
      <Variable x:TypeArguments="x:String" Name="vartempbatchtime" />
      <Variable x:TypeArguments="x:String" Name="var_localfolderpath" />
      <Variable x:TypeArguments="x:String" Name="var_local_pdffilepath" />
      <Variable x:TypeArguments="x:String" Name="varinv_comment" />
      <Variable x:TypeArguments="x:String" Name="var_buystatus" />
      <Variable x:TypeArguments="x:String" Name="var_pdfinsdate" />
      <Variable x:TypeArguments="x:String" Name="var_ClientName" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_PBT_Record" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="DB_CONN" />
      <Variable x:TypeArguments="x:String" Default="No" Name="isMultiInvMultiBuy" />
      <Variable x:TypeArguments="x:String" Name="strFileName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:Comment DisplayName="Comment (placeholder)" sap:VirtualizedContainerService.HintSize="1661,55" sap2010:WorkflowViewState.IdRef="Comment_1" Text="//  Invoke steps of the process" />
    <Sequence DisplayName="Get Assets" sap:VirtualizedContainerService.HintSize="1661,644" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="var_SPURL_GPC" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[var_localfolderpath]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_localfolderpath]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[out_spuser]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_spuser]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[var_sppass]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_sppass]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[var_SPURL]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_SPURL]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[var_SPURL_GPC]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_SPURL_GPC]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
    </Sequence>
    <Sequence DisplayName="Sequence- PBT Log Txn" sap:VirtualizedContainerService.HintSize="1661,479" sap2010:WorkflowViewState.IdRef="Sequence_18">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_Query" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:DatabaseConnect DatabaseConnection="[DB_CONN]" DisplayName="Connect" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="System.Data.SqlClient" ConnectionString="[in_Config(&quot;DBConnection_String&quot;).ToString]" />
      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_15">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_Query]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["SELECT * FROM Digital_PBT_Txn Where PBT_Log_ID= '"+in_TransactionItem("Log_ID").ToString.Trim+"'"]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_16">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataTable">[dt_PBT_Record]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataTable">[new DataTable]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_PBT_Record]" DisplayName="Execute Query" ExistingDbConnection="[DB_CONN]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[str_Query]">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
      </ui:ExecuteQuery>
    </Sequence>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Validate Mandatory Fields workflow" sap:VirtualizedContainerService.HintSize="1661,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Files\Validate Mandatory Fields.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="io_pdf_insertiondate">[in_TransactionItem("Log_Invoice_Date").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="io_pdf_file_name">[in_TransactionItem("Log_Invoice_FileName").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_SPPass">[var_sppass]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_SPUser">[out_spuser]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_inv_num">[in_TransactionItem("Log_Invoice_Number").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_C">[in_TransactionItem("Log_Validated_C").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_P">[in_TransactionItem("Log_Validated_P").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_E">[in_TransactionItem("Log_Validated_E").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_FA_Status">[in_TransactionItem("Log_FA_Action_Status").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_MOS">[in_TransactionItem("Log_Invoice_MOS").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_PDF_Amount">[in_TransactionItem("Log_Invoice_Amount").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_fa_name">[in_TransactionItem("FA_NAME").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_doc_link">[in_TransactionItem("Log_SP_FilePath").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_pubcode">[in_TransactionItem("Log_Publication_Code").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_db" />
        <OutArgument x:TypeArguments="x:String" x:Key="out_insdate">[var_pdfinsdate]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_fastatus">[in_TransactionItem("Log_FA_Action_Status").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_agency">[in_TransactionItem("Agency_name").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_DB_Connection">[in_Config("DBConnection_String").ToString]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_ClientName">[var_ClientName]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_pubname">[in_TransactionItem("Log_Publication_Name").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_DB_Connection_Dev">[in_Config("DBConnection_String_Dev").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="arg_Log_ID">[in_TransactionItem("Log_ID").ToString.Trim]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <If Condition="[dt_PBT_Record.RowCount &gt; 0]" DisplayName="If - fa action is TAG" sap:VirtualizedContainerService.HintSize="1661,4569" sap2010:WorkflowViewState.IdRef="If_6">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="1312,4411" sap2010:WorkflowViewState.IdRef="Sequence_19">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="str_BatchDetails" />
            <Variable x:TypeArguments="x:String" Name="in_C" />
            <Variable x:TypeArguments="x:String" Name="in_P" />
            <Variable x:TypeArguments="x:String" Name="in_E" />
            <Variable x:TypeArguments="x:String" Name="in_MOS" />
            <Variable x:TypeArguments="x:String" Name="in_PubCode" />
            <Variable x:TypeArguments="x:String" Name="in_FileName" />
            <Variable x:TypeArguments="x:String" Name="varQueryMultiInv" />
            <Variable x:TypeArguments="sd:DataTable" Name="dt_CountInvoice" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1270,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;In TAG action flow&quot;]" />
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1270,222" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[in_C]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[in_TransactionItem("Log_Validated_C").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[in_P]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[in_TransactionItem("Log_Validated_P").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[in_E]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[in_TransactionItem("Log_Validated_E").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[in_MOS]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[in_TransactionItem("Log_Invoice_MOS").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[in_PubCode]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[in_TransactionItem("Log_Publication_Code").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <Assign sap:VirtualizedContainerService.HintSize="1270,60" sap2010:WorkflowViewState.IdRef="Assign_19">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[str_BatchDetails]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_C+"_"+in_P+"_"+in_E+"_"+in_MOS+"_"+in_PubCode]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign- Get All LogID from Batch" sap:VirtualizedContainerService.HintSize="1270,60" sap2010:WorkflowViewState.IdRef="Assign_20">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[varQueryMultiInv]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String" xml:space="preserve">["SELECT DISTINCT PBT_Log_ID FROM  Digital_PBT_Txn WHERE PBT_MultiInv_Batch_Details like '%"+str_BatchDetails+"%' "]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_CountInvoice]" DisplayName="Execute Query" ExistingDbConnection="[DB_CONN]" sap:VirtualizedContainerService.HintSize="1270,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_2" Sql="[varQueryMultiInv]">
            <ui:ExecuteQuery.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:ExecuteQuery.Parameters>
          </ui:ExecuteQuery>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1270,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Count of invoices -&quot;+ dt_CountInvoice.Rows.Count.tostring]" />
          <If Condition="[in_TransactionItem(&quot;Log_FA_Action_Status&quot;).ToString.Trim.Tolower.Equals(&quot;tag&quot;) and dt_CountInvoice.Rows.Count&gt;1 and not  dt_PBT_Record.Rows(0).Item(&quot;PBT_Is_Segment&quot;).ToString.Trim.ToLower.Equals(&quot;true&quot;)]" DisplayName="If - Multi Invoice 1 Buy, add comment for stamping and replace Invoice amount by Total Sum amount" sap:VirtualizedContainerService.HintSize="1270,1406" sap2010:WorkflowViewState.IdRef="If_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="921,1248" sap2010:WorkflowViewState.IdRef="Sequence_21">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence sap:VirtualizedContainerService.HintSize="879,1156" sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="strTotalAmount" />
                    <Variable x:TypeArguments="x:String" Name="str_QueryLeadingInvoice" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dt_LeadingInvoice_LogTxn" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="837,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;In Multi Invoice 1 Buy Flow&quot;]" />
                  <Assign sap:VirtualizedContainerService.HintSize="837,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[var_buystatus]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">true</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign- Get Leading Invoice Details" sap:VirtualizedContainerService.HintSize="837,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_QueryLeadingInvoice]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">["Select log_invoice_number From Digital_Log_Txn Where Log_Publication_Code Like '"+in_PubCode+"' and Log_Validated_C like '"+in_C+"' and Log_Invoice_Number In ( Select PBT_MultiInv_Leading_InvoiceNumber From  Digital_PBT_Txn Where PBT_MultiInv_Batch_Details Like '%"+str_BatchDetails+"%' )"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_LeadingInvoice_LogTxn]" DisplayName="Execute Query" ExistingDbConnection="[DB_CONN]" sap:VirtualizedContainerService.HintSize="837,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_3" Sql="[str_QueryLeadingInvoice]">
                    <ui:ExecuteQuery.Parameters>
                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                    </ui:ExecuteQuery.Parameters>
                  </ui:ExecuteQuery>
                  <If Condition="[in_TransactionItem(&quot;Log_Invoice_number&quot;).ToString.Equals(dt_LeadingInvoice_LogTxn(0)(0).ToString)]" DisplayName="If - if invoice number is leading invoice number then download all the invoices, and then combine, else do not combine pdfs" sap:VirtualizedContainerService.HintSize="837,605" sap2010:WorkflowViewState.IdRef="If_7">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="416,447" sap2010:WorkflowViewState.IdRef="Sequence_22">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Multiinvoicebuydata workflow" sap:VirtualizedContainerService.HintSize="374,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Tests\Multiinvoicebuydata.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_invcomment">[dt_PBT_Record(0)("PBT_Stamp_Comment").ToString.Trim]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_invcomment">[varinv_comment]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_buystatus">[var_buystatus]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_buystatus">[var_buystatus]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_TotalAmount">[strTotalAmount]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="374,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Tests\Combine Invoices for MultiInvoice1Buy.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="sd:DataRow" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="DBConnectionString">[in_Config("DBConnection_String").tostring]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_SPuser">[in_spuser]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_SPPass">[in_sppass]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_SPURL">[in_SPURL]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_local_PdfFilePath">[in_Config("FA_Log_File").ToString+"Compile\Combine MultiInvoice1Buy\"]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_SPURL_GPC">[in_SPURL_GPC]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_DowloadedPdfPath">[in_Config("FA_Log_File").ToString+"Compile\"]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <If Condition="[not strTotalAmount.ToLower.Contains(&quot;no extraction&quot;)]" sap:VirtualizedContainerService.HintSize="374,51" sap2010:WorkflowViewState.IdRef="If_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[in_TransactionItem("Log_Invoice_Amount")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[strTotalAmount]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                        </If>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Sequence - flow to download all the invoices and stamp without combining the files" sap:VirtualizedContainerService.HintSize="376,304" sap2010:WorkflowViewState.IdRef="Sequence_23">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Download PDF workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Files\Download PDF.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_SPURL">[in_SPURL]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_spuser">[in_spuser]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_sppass">[in_sppass]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_pdffilename">[in_TransactionItem("Log_Invoice_FileName").ToString.Trim]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_pdffilepath">[var_localfolderpath]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Doc_Link">[in_TransactionItem("Log_SP_Filepath").ToString.Trim]</InArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="io_local_pdffilepath">[var_local_pdffilepath]</InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_SPURL_GPC">[in_SPURL_GPC]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_buyStatus">false</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_MultiInvMultiBuy">[isMultiInvMultiBuy]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[varinv_comment]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_12">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[varinv_comment]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[string.Empty]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[var_buystatus]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
          <If Condition="[in_TransactionItem(&quot;Log_FA_Action_Status&quot;).ToString.ToLower.Contains(&quot;tag&quot;) and dt_PBT_Record(0)(&quot;PBT_Tag_Status&quot;).ToString.ToLower.Contains(&quot;yes&quot;) and dt_PBT_Record(0)(&quot;PBT_Is_Segment&quot;).ToString.ToLower.Contains(&quot;true&quot;)]" DisplayName="If - Segment Buy tagged by FA" sap:VirtualizedContainerService.HintSize="1270,2021" sap2010:WorkflowViewState.IdRef="If_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="1086,1834" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="strSegmentComment" />
                  <Variable x:TypeArguments="x:String" Name="str_QueryLeadingInvoice" />
                  <Variable x:TypeArguments="sd:DataTable" Name="dt_LeadingInvoice_LogTxn" />
                  <Variable x:TypeArguments="sd:DataTable" Name="dt_TagSegmentInvCount" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1044,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;In Segment-Tag Flow&quot;]" />
                <Assign DisplayName="Assign- Get Invoice Count details" sap:VirtualizedContainerService.HintSize="1044,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[str_QueryLeadingInvoice]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["Select log_invoice_number, log_invoice_amount From Digital_Log_Txn Where log_id In (Select Distinct Log_ID From Digital_PBT_Txn_vw Where Log_Validated_C = '"+in_C.Trim+"' and Log_Validated_P = '"+in_P.Trim+"' and Log_Validated_E = '"+in_E.Trim+"' and Log_Publication_Code = '"+in_PubCode.Trim+"' And Log_Invoice_MOS = '"+in_MOS+"') Order By Log_Invoice_Amount desc"]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_TagSegmentInvCount]" DisplayName="Execute Query" ExistingDbConnection="[DB_CONN]" sap:VirtualizedContainerService.HintSize="1044,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_5" Sql="[str_QueryLeadingInvoice]">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                </ui:ExecuteQuery>
                <Assign DisplayName="Assign- Get Leading Invoice Details" sap:VirtualizedContainerService.HintSize="1044,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[str_QueryLeadingInvoice]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["Select top 1 log_invoice_number, log_invoice_amount From Digital_Log_Txn Where log_id In (Select Distinct Log_ID From Digital_PBT_Txn_vw Where Log_Validated_C = '"+in_C.Trim+"' and Log_Validated_P = '"+in_P.Trim+"' and Log_Validated_E = '"+in_E.Trim+"' and Log_Publication_Code = '"+in_PubCode.Trim+"' And Log_Invoice_MOS = '"+in_MOS+"') Order By Log_Invoice_Amount desc"]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_LeadingInvoice_LogTxn]" DisplayName="Execute Query" ExistingDbConnection="[DB_CONN]" sap:VirtualizedContainerService.HintSize="1044,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_4" Sql="[str_QueryLeadingInvoice]">
                  <ui:ExecuteQuery.Parameters>
                    <scg:Dictionary x:TypeArguments="x:String, Argument" />
                  </ui:ExecuteQuery.Parameters>
                </ui:ExecuteQuery>
                <If Condition="[in_TransactionItem(&quot;Log_Invoice_number&quot;).ToString.Equals(dt_LeadingInvoice_LogTxn(0)(0).ToString)]" DisplayName="If - if invoice number is leading invoice number then download all the invoices, and then combine, else do not combine pdfs" sap:VirtualizedContainerService.HintSize="1044,803" sap2010:WorkflowViewState.IdRef="If_9">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="695,645" sap2010:WorkflowViewState.IdRef="Sequence_24">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="653,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,204" sap2010:WorkflowViewState.IdRef="Sequence_26">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Multiinvoicebuydata workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Tests\Multiinvoicebuydata.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_invcomment">[dt_PBT_Record(0)("PBT_Stamp_Comment").ToString.Trim]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_invcomment">[varinv_comment]</OutArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_buystatus">[var_buystatus]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_buystatus">[var_buystatus]</OutArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_TotalAmount">[strTotalAmount]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </ui:CommentOut.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CommentOut>
                      <If Condition="[dt_TagSegmentInvCount.Rows.Count&gt; 1]" sap:VirtualizedContainerService.HintSize="653,310" sap2010:WorkflowViewState.IdRef="If_11">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_29">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[isMultiInvMultiBuy]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">yes</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_30">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[isMultiInvMultiBuy]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">no</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="653,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Tests\Combine Invoices for Tag Segment.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="sd:DataRow" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="DBConnectionString">[in_Config("DBConnection_String").tostring]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_SPuser">[in_spuser]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_SPPass">[in_sppass]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_SPURL">[in_SPURL]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_local_PdfFilePath">[in_Config("FA_Log_File").ToString+"Compile\Combine MultiInvoice1Buy\"]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_SPURL_GPC">[in_SPURL_GPC]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_DowloadedPdfPath">[in_Config("FA_Log_File").ToString+"Compile\"]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Sequence - flow to download all the invoices and stamp without combining the files" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_25">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[varinv_comment]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Set Segment Buy Invoice Comment workflow" sap:VirtualizedContainerService.HintSize="1044,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Files\Set Segment Buy Invoice Comment.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="dbConnectionString">[in_Config("DBConnection_String").tostring]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="dbConnectionString_Dev">[in_Config("DBConnection_String_Dev").tostring]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="ID">[in_TransactionItem("Log_ID").ToString.Trim]</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="outSegmentComment">[strSegmentComment]</OutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_MultiInvoiceMultiBuy">[isMultiInvMultiBuy]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_C">[in_C]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_P">[in_P]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_E">[in_E]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_MOS">[in_MOS]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_PubCode">[in_PubCode]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <Assign sap:VirtualizedContainerService.HintSize="1044,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[in_TransactionItem("Log_FA_Interface_Comment")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[strSegmentComment]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="1044,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[in_TransactionItem("Log_FA_Action_Status")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">["Tag-Segment"]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_20">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[varinv_comment]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[string.Empty]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_18">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[var_buystatus]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Else>
    </If>
    <If Condition="[in_TransactionItem(&quot;Log_FA_Action_Status&quot;).ToString.ToLower.Contains(&quot;append-s9&quot;)]" sap:VirtualizedContainerService.HintSize="1661,526" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,339" sap2010:WorkflowViewState.IdRef="TryCatch_1">
          <TryCatch.Try>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke FA_Action_Append_S9 workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Files\FA_Action_Append_S9.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="ID">[in_TransactionItem("Log_ID").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_SPPass">[in_sppass]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_SPUser">[in_spuser]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="io_pdf_file_name">[in_TransactionItem("Log_Invoice_FileName").ToString.Trim]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_fa_name">[in_TransactionItem("FA_NAME").ToString.Trim]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="io_local_pdffilepath">[in_Config("FA_Log_File").ToString+"Compile\Append_S9_Attachments\"]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_SPURL">[in_SPURL]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_SPURL_GPC">[in_SPURL_GPC]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="Invoice_Name">[in_TransactionItem("Log_Invoice_FileName").tostring]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="dbConnectionString">[in_Config("DBConnection_String").tostring]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="dbConnectionString_Dev">[in_Config("DBConnection_String_Dev").tostring]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </If.Then>
    </If>
    <If Condition="[in_TransactionItem(&quot;Log_FA_Action_Status&quot;).ToString.ToLower.Contains(&quot;attach-s9&quot;)]" sap:VirtualizedContainerService.HintSize="1661,299" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Compile_File_Attach_S9 workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Files\Compile_File_Attach_S9.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="RecordID">[in_TransactionItem("Log_ID").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_SPuser">[in_spuser]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_SPPass">[in_sppass]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_SPUrl">[in_SPURL]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="io_local_pdffilepath">[in_Config("FA_Log_File").ToString+"Compile\Attach_S9_Attachments\"]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="Invoice_Name">[in_TransactionItem("Log_Invoice_FileName").tostring]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="DBConnectionString">[in_Config("DBConnection_String").tostring]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_SPURL_GPC">[in_SPURL_GPC]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_Doc_Link">[in_TransactionItem("Log_SP_FilePath").tostring]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="io_pdf_file_name">[in_TransactionItem("Log_Invoice_FileName").ToString.Trim]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_fa_name">[in_TransactionItem("FA_NAME").ToString.Trim]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="DBConnectionString_Dev">[in_Config("DBConnection_String_Dev").tostring]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Download PDF workflow" sap:VirtualizedContainerService.HintSize="1661,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Files\Download PDF.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_SPURL">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="var_SPURL" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_spuser">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="out_spuser" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_sppass">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="var_sppass" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_pdffilename">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Log_Invoice_FileName&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_pdffilepath">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="var_localfolderpath" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Doc_Link">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Log_SP_FilePath&quot;).ToString.Trim" />
        </InArgument>
        <InOutArgument x:TypeArguments="x:String" x:Key="io_local_pdffilepath">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="var_local_pdffilepath" />
        </InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_SPURL_GPC">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_SPURL_GPC" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_buyStatus">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="var_buystatus" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_MultiInvMultiBuy">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="isMultiInvMultiBuy" />
        </InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_strFileName">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="strFileName" />
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Set NRA Status workflow" sap:VirtualizedContainerService.HintSize="1661,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Files\Set NRA Status.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="io_pubcode_nra">[in_TransactionItem("Log_Publication_Code").ToString.Trim]</InArgument>
        <InOutArgument x:TypeArguments="x:String" x:Key="io_nrastatus">[var_isnra]</InOutArgument>
        <InOutArgument x:TypeArguments="ui:DatabaseConnection" x:Key="io_dbconnect">[var_dbconnect]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="tempinvnum">[in_TransactionItem("Log_Invoice_Number").ToString.Trim]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_db_Connection">[in_Config("DBConnection_String").ToString]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1661,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[in_TransactionItem(&quot;Log_ID&quot;).ToString.Trim]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Add Data to Queue workflow" sap:VirtualizedContainerService.HintSize="1661,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process Files\Add Data to Queue.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_pdf_invoice_date">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="var_pdfinsdate" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_queue_name">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;OrchestratorQueueName&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_inv_num">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Log_Invoice_Number&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_pub_code">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Log_Publication_Code&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_C">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Log_Validated_C&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_MediaLookup">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Log_Invoice_Media_Code&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_P">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Log_Validated_P&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_E">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Log_Validated_E&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_PDF_MOS">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Log_Invoice_MOS&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_PDF_Amount">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Log_Invoice_Amount&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_bucketstatus" />
        <InArgument x:TypeArguments="x:String" x:Key="in_inv_name_link">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="strFileName" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Agency">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Agency_name&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_IS_NRA">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="var_isnra" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Doc_Link">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Log_SP_FilePath&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_fa_status">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Log_FA_Action_Status&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Local_File_Path">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="var_local_pdffilepath" />
        </InArgument>
        <InArgument x:TypeArguments="ui:DatabaseConnection" x:Key="in_dbconnect">
          <mva:VisualBasicValue x:TypeArguments="ui:DatabaseConnection" ExpressionText="var_dbconnect" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_FA_Name">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;FA_NAME&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_pubname">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Log_Publication_Name&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_queuebatchtime">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_localbatchtime" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_tag_status">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="String.Empty" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_table_name">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;TableName&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_invcomment">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="varinv_comment" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_buystatus">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="var_buystatus" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_splitS9">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Log_FA_Interface_Comment&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_pub_code2">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Log_Publication_Code&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ClientName">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="var_ClientName" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Vendor">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Vendor_Name&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Log_ID">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_TransactionItem(&quot;Log_ID&quot;).ToString.Trim" />
        </InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="In_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>